line_end      : '\n' ;

any           : !<line_end> ;

comment       : ' # ' <any> <line_end> ;

digit         : '0' | '1' | '2' | '3' | '4' | '5' | '6' | '7' | '8' | '9' ;

number        : <digit>
              | <digit> <number>
              ;

string        : '"' <any> '"'
              ;

literal       : <number>
              | <string>
              ;

expression    : <literal>
              ;

empty         : '\n'
              | <comment> '\n'
              ;

lower_letter  : 'a' | 'b' | 'c' | 'd' | 'e' | 'f' | 'g' | 'h' | 'i' | 'j' | 'k' | 'l' | 'm'
              | 'n' | 'o' | 'p' | 'q' | 'r' | 's' | 't' | 'u' | 'v' | 'w' | 'x' | 'y' | 'z'
              ;

upper_letter  : 'A' | 'B' | 'C' | 'D' | 'E' | 'F' | 'G' | 'H' | 'I' | 'J' | 'K' | 'L' | 'M'
              | 'N' | 'O' | 'P' | 'Q' | 'R' | 'S' | 'T' | 'U' | 'V' | 'W' | 'X' | 'Y' | 'Z'
              ;

any_letter    : <lower_letter>
              | <upper_letter>
              ;

any_letters   : <any_letter>
              | <any_letter> <any_letters>
              ;

identifier    : <lower_letter> <any_letters>
              ;

type          : <upper_letter> <any_letters>
              ;

slot          : <type> ' ' <identifier>
              | <identifier>
              ;

assignment    : <slot> ' = ' <expression>
              | <slot> ' = ' <literal>
              ;

module        : <assignment> <line_end>
              | <empty>
              ;
